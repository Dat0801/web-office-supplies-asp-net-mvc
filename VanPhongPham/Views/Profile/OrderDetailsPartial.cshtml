@model VanPhongPham.Models.OrderViewModel

<style>
    .xBNaac {
        background-image: repeating-linear-gradient(45deg, #6fa6d6, #6fa6d6 33px, transparent 0, transparent 41px, #f18d9b 0, #f18d9b 74px, transparent 0, transparent 82px);
        background-position-x: -30px;
        background-size: 116px 3px;
        height: 3px;
        width: 100%;
    }
    .order-status-tabs .nav-tabs {
        display: flex;
        flex-wrap: nowrap;
        border-bottom: 1px solid #ddd;
    }

        .order-status-tabs .nav-tabs .nav-link {
            color: #333;
            font-weight: bold;
            padding: 10px 0;
            border: none;
        }

            .order-status-tabs .nav-tabs .nav-link.active {
                color: #ff4747;
                border-bottom: 3px solid #ff4747;
            }

    .order-container {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        margin-bottom: 15px;
        padding: 20px;
        position: relative;
    }

    .order-status {
        font-size: 14px;
        color: #555;
    }

    .order-details, .order-actions {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 10px 0;
    }

    .product-info {
        display: flex;
        align-items: center;
        gap: 15px;
    }

        .product-info img {
            width: 80px;
            height: auto;
            border: 1px solid #ddd;
        }

        .product-info .product-name {
            color: #333;
        }

    .price-info {
        text-align: right;
        color: #ff4747;
    }

    .back-button {
        display: flex;
        align-items: center;
        font-size: 15px;
        color: inherit;
        text-decoration: none;
    }

    .order-actions button {
        background-color: #ff4747;
        font-size: 14px;
        color: #fff;
        padding: 8px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .order-actions button:hover {
            background-color: #ff2e2e;
        }

    .order-actions .btn-outline-secondary {
        background-color: #ffffff;
        color: #555;
        border: 1px solid rgba(0, 0, 0, 0.09);
    }

        .order-actions .btn-outline-secondary:hover {
            background-color: rgba(0, 0, 0, 0.05);
            color: #555;
        }

    .order-cost-details {
        font-size: 14px;
        color: #555;
    }

    .payment-info p {
        margin: 0;
    }
</style>

@if (Model != null)
{
    <div class="order-container">
        <div class="d-flex align-items-center justify-content-between mb-3">
            <!-- Nút Trở lại có thể quay lại trang trước -->
            <a href="javascript:history.back()" style="display: flex; align-items: center; font-size: 15px; color: inherit; text-decoration: none;">
                <img src="~/Public/img/icons/icons8-backorder.png" width="15" height="15" style="margin-right: 5px;" /> TRỞ LẠI
            </a>

            <!-- Hiển thị trạng thái đơn hàng -->
            <div class="order-status" style="font-size: 14px;">
                <span style="color: #555">
                    MÃ ĐƠN HÀNG. @Model.OrderId <span style="margin: 0px 12px">|</span>
                </span>
                <span style="color: #ff4747;">
                    @Model.OrderStatusName.ToUpper()
                </span>
            </div>
        </div>
        <hr />

        <div>
            <p style="font-size: 14px; color: #555">
                ĐƠN HÀNG ĐÃ ĐẶT: 
                @if (Model.CreatedAt.HasValue)
                {
                    <span>@Model.CreatedAt.Value.ToString("HH:mm dd-MM-yyyy")</span>
                }
            </p>
        </div>

        <div>
            <div class="xBNaac"></div>
            <h5 style="margin-top: 20px">Địa Chỉ Nhận Hàng</h5>
            @{
                var addressParts = Model.InfoAddress.Split(new[] { ", " }, StringSplitOptions.None);
                var name = addressParts.ElementAtOrDefault(0) ?? "";
                var phone = addressParts.ElementAtOrDefault(1) ?? "";
                var address = string.Join(", ", addressParts.Skip(2));
            }
            <p style="font-size:16px">@name</p>
            <p style="font-size:14px">@phone</p>
            <p style="font-size:14px;">@address</p>
        </div>
        <hr />
        @{
            var totalItemCost = 0.0;
        }

        @foreach (var detail in Model.OrderDetails)
        {
            totalItemCost += detail.TotalAmount;
            <a href="#" style="text-decoration: none; color: #555 ">
                <div class="order-details">
                    <div class="product-info">
                        <img src="@detail.ImageUrl" alt="Product Image" />
                        <div>
                            <div class="product-name" style="font-size: 17px">@detail.ProductName</div>
                            <div><span>x</span>@detail.Quantity</div>
                        </div>
                    </div>
                    @if (detail.Promotion_Price == 0)
                    {
                        <span class="price-info" style="color: #272727;">₫@detail.Price.ToString("N0")</span>
                    }
                    else
                    {
                        <span class="price-info"><del style="margin-right:10px; color: #777777">₫@detail.Price.ToString("N0")</del>₫@detail.Promotion_Price.ToString("N0")</span>
                    }
                </div>
            </a>
        }
        <hr />
        <div class="order-cost-details">
            <div class="d-flex justify-content-end">
                <div class="col-8 text-right p-0">
                    <span style="font-size: 13px">Tổng tiền hàng</span>
                </div>
                <div class="col-4 text-right p-0">
                    <span>₫@totalItemCost.ToString("N0")</span>
                </div>
            </div>
            <hr />
            <div class="d-flex justify-content-end">
                <div class="col-8 text-right p-0">
                    <span style="font-size: 13px">Phí vận chuyển</span>
                </div>
                <div class="col-4 text-right p-0">
                    <span>₫@(Model.ShippingFee.HasValue ? Model.ShippingFee.Value.ToString("N0") : "0")</span>
                </div>
            </div>
            <hr />
            <div class="d-flex justify-content-end">
                <div class="col-8 d-flex align-items-center justify-content-end p-0">
                    <span style="font-size: 13px">Thành tiền</span>
                </div>
                <div class="col-4 d-flex align-items-center justify-content-end p-0" style="color: red; font-size: 24px;">
                    <span>₫@(Model.TotalAmount.HasValue ? Model.TotalAmount.Value.ToString("N0") : "0")</span>
                </div>
            </div>
        </div>

        <hr />
        @if (Model.MethodId == "PAY001")
        {
            <div class="payment-info mt-3" style="background-color: #fff7e6; padding: 15px; border-radius: 8px; border: 1px solid #ffd28a; display: flex; align-items: center;">
                <i class="fa fa-exclamation-circle" style="color: #ff4747; font-size: 13px; margin-right: 10px;"></i>
                <p style="margin: 0; color: #555; font-size: 14px">Vui lòng thanh toán <span style="color: #ff4747;">₫@(Model.TotalAmount.HasValue ? Model.TotalAmount.Value.ToString("N0") : "0")</span> khi nhận hàng.</p>
            </div>
            <hr />
        }


        <div class="order-cost-details mt-3">
            <div class="d-flex">
                <div class="col-8 text-right p-0">
                    <span style="font-size: 13px;">Phương thức Thanh toán</span>
                </div>
                <div class="col-4 text-right p-0">
                    <span>@Model.MethodName</span>
                </div>
            </div>
        </div>
    </div>
}
